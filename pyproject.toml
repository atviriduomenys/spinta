[tool.poetry]
name = "spinta"
version = "0.1.53.dev0"
description = "A platform for describing, extracting, transforming, loading and serving open data."
authors = ["Mantas Zimnickas <sirexas@gmail.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://gitlab.com/atviriduomenys/spinta"
repository = "https://gitlab.com/atviriduomenys/spinta"
documentation = "https://spinta.readthedocs.io/"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Database :: Front-Ends",
]
packages = [
    { include = "spinta" },
]


[tool.poetry.urls]
"Bug Tracker" = "https://gitlab.com/atviriduomenys/spinta/-/issues"


[tool.poetry.scripts]
spinta = "spinta.cli.main:app"


[tool.poetry.dependencies]
python = "^3.8"
setuptools = "^65.4.1"
setuptools-scm = "^7.0.5"
multipledispatch = "^0.6.0"
lark-parser = "^0.12.0"
toposort = "^1.7"
unidecode = "^1.3.6"
pprintpp = "^0.4.0"
# used for migrations, probably should be removed in near future
jsonpatch = "^1.32"

[tool.poetry.group]
optional = true

#HTTP
[tool.poetry.group.http]
starlette = "^0.21.0"
gunicorn = "^20.1.0"
uvicorn = "^0.18.3"
authlib = "~0.11"
# starlette dependency form request.form() parsing
python-multipart = "^0.0.5"
httpx = "^0.23.0"
aiohttp = "^3.8.1"
aiofiles = { version = "^22.1.0", optional = true }

#Logging
[tool.poetry.group.log]
psutil = "^5.9.3"

#Personally identifiable information
[tool.poetry.group.pii]
phonenumbers = "^8.12.56"

# CLI
[tool.poetry.group.cli]
click = "^8.1.3"
typer = "^0.6.1"

# Manifest groups
[tool.poetry.group.manifests.yaml]
ruamel.yaml = { version = "^0.17.21", optional = true}
# FIXME: https://setuptools.readthedocs.io/en/latest/history.html#v58-0-0
#        simpleeval package uses use_2to3 thus it is not compatbile with
#        setuptools>=58

[tool.poetry.group.manifests.sql]
sqlparse = "^0.4.3"

[tool.poetry.group.manifests.excel]
xlrd = "^2.0.1"
XlsxWriter = "^1.3.7"
openpyxl = "^3.0.7"

# Internal backends
[tool.poetry.group.backends.postgres]
alembic = "^1.8.1"
asyncpg = "^0.22.0"
psycopg2-binary = "^2.9.3"
# FIXME: https://github.com/python-poetry/poetry/issues/4402
# sqlalchemy = "~1.4"
sqlalchemy = "~1.4"

[tool.poetry.group.backends.mongo]
pymongo = "^4.2.0"

# External backends
[tool.poetry.group.datasets]
msgpack = "^1.0.4"
requests = "^2.28.1"
fsspec = "^2022.5.0"
dask = {extras = ["dataframe"], version = "^2023.3.2"}
tqdm = "^4.64.1"
# XML format dependencies
[tool.poetry.group.datasets.xml]
lxml = "^4.9.1"

# Export formats
[tool.poetry.group.formats.html]
jinja2 = "^3.1.2"

[tool.poetry.group.formats.json]
ujson = "^5.5.0"

[tool.poetry.group.formats.rdf]
lxml = "^4.9.1"

# Types
[tool.poetry.group.types.geometry]
GeoAlchemy2 = "^0.9.4"
Shapely = "^1.8.0"
pyproj = "^3.4.0"

# Testing
[tool.poetry.group.test]
pytz = "^2022.2.1"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
ipython = "^8.5.0"
pp-ez = "^0.2.0"
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.9.0"
responses = "^0.21.0"
snoop = "^0.4.2"
# https://github.com/kvesteri/sqlalchemy-utils/issues/472
sqlalchemy-utils = "~0.37"
python-dotenv = "^0.21.0"

# Docs
sphinx = "^5.2.3"
sphinx-autobuild = "^2021.3.14"
sphinxcontrib-httpdomain = "^1.8.0"
memory-profiler = "^0.58.0"
mypy = "^0.812"
cssselect = "^1.1.0"
objprint = "^0.1.4"
sphinx-rtd-theme = "^1.0.0"
sqlalchemy-stubs = "^0.4"

[_tool.poetry.extras]
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
disallow_any_unimported = true
show_error_codes = true
check_untyped_defs = true
plugins = "sqlmypy"
